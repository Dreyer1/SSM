<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
http://www.springframework.org/schema/task
http://www.springframework.org/schema/task/spring-task-3.2.xsd
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-3.2.xsd 
http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

	<!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
	<context:component-scan base-package="com.dreyer.ssm.controller" />

	<!-- @ResponseBody返回日期为毫秒数的处理器bean -->
	<bean id="customObjectMapper" class="com.dreyer.ssm.common.CustomerDateConverter"></bean>

	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<!-- 解决使用@ResponseBody返回json数据时，出现中文乱码的问题 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes" value="text/plain;charset=UTF-8" />
			</bean>

			<!-- @ResponseBody返回json对象时，日期为毫秒数问题 -->
			<bean
				class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
				<property name="objectMapper" ref="customObjectMapper"></property>
			</bean>

		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 使用@ResponseBody注解，请求返回json数据的转换器，这里既然使用了Jackson的json解析方式，所以要添加Jackson的jar包 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /><!-- json转换器 -->
			</list>
		</property>
	</bean>

	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->

	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="suffix" value=".jsp" />
		<property name="prefix" value="/WEB-INF/pages/" />
	</bean>
	<!-- 文件上传的配置，需要commons-fileupload的jar包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<value>32505856</value><!-- 上传文件大小限制为31M，31*1024*1024 -->
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>

	<!-- spring的异常处理器 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver" />
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver" />

	<!-- 自定义全局异常处理器 -->
	<bean class="com.dreyer.ssm.exception.handler.GlobalExceptionHandler"></bean>

	<!-- 自定义系统拦截器 ，拦截所有的请求 -->
	<mvc:interceptors>
		<bean class="com.dreyer.ssm.interceptors.LoginInterceptor" />
	</mvc:interceptors>

	<!-- 像这种配置就可以拦截指定的请求 <mvc:interceptors> <mvc:interceptor> <mvc:mapping path="/user/**" 
		/> <bean class="com.dreyer.ssm.interceptors.LoginInterceptor" /> </mvc:interceptor> 
		</mvc:interceptors> -->
		
		
		
		<!-- 启用Spring对@AspectJ切面配置的支持，并确保自动代理（autoproxying）的bean是否能被这些切面通知 -->
		<aop:aspectj-autoproxy/>
</beans>